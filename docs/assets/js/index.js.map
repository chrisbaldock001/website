{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/js/components/navigation.js","assets/js/components/overviewStats.js","assets/js/components/projectStats.js","assets/js/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict'\n\nexport default class Navigation {\n    constructor(element) {\n        this.root = element;\n\n        this.bindEvents();\n    }\n\n    toggleNav(e) {\n        var icon = e.currentTarget;\n        var mobileMenu = e.currentTarget.parentNode.parentNode;\n\n        (mobileMenu.classList.contains('active')) ? this.closeNav(icon, mobileMenu): this.openNav(icon, mobileMenu);\n    }\n\n    openNav(icon, mobileMenu) {\n        mobileMenu.classList.add('active');\n        icon.classList.add('active');\n        document.querySelector('body').classList.add('menu-active');\n\n        // mobileMenu.querySelector('.navlink:first-child').focus();\n    }\n\n    closeNav(icon, mobileMenu) {\n        mobileMenu.classList.remove('active');\n        icon.classList.remove('active');\n        document.querySelector('body').classList.remove('menu-active');\n    }\n\n    bindEvents() {\n        this.root.addEventListener('click', this.toggleNav.bind(this));\n    }\n}","var map;\n\nexports.initMap = function initMap() {\n\n  var myStyle = {\n\t\"color\": \"#ff7800\",\n\t\"weight\": 5,\n\t\"opacity\": 0.65\n  };\n\n  map = L.map('map').setView([0.0, 0.0], 2);\n  L.tileLayer( 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', {\n    attribution: 'Map tiles by <a href=\"https://carto.com/\">Carto</a>, under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY 3.0.</a> Data by <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, under ODbL.',\n    subdomains: ['a','b','c']\n  }).addTo( map );\n  console.log('added map');\n  var projectCentroidsUrl = 'https://apps.mapswipe.org/api/projects/projects_centroid.geojson';\n  setTimeout(function(){ map.invalidateSize()}, 400);\n  addGeojsonLayer(projectCentroidsUrl);\n\n  // add legend\n  addLegend()\n\n}\n\nfunction addLegend() {\n  var legend = L.control({position: 'topright'});\n  legend.onAdd = function (map) {\n\tvar div = L.DomUtil.create('div', 'info legend')\n\tdiv.innerHTML += '<i style=\"background:orange\"></i>active<br>'\n\tdiv.innerHTML += '<i style=\"background:blue\"></i>finished<br>'\n\tdiv.innerHTML += '<i style=\"background:grey\"></i>inactive<br>'\n\treturn div;\n  };\n  legend.addTo(map);\n}\n\nfunction addGeojsonLayer (url) {\n  var geojsonData = $.ajax({\n    url:url,\n    dataType: \"json\",\n    success: console.log(\"mapswipe project centroids data successfully loaded.\"),\n    error: function (xhr) {\n      alert(xhr.statusText)\n    }\n  })\n  // Specify that this code should run once the county data request is complete\n  $.when(geojsonData).done(function() {\n\n    // define default point style\n    var geojsonMarkerGreen = {\n        radius: 6,\n        fillColor: \"grey\",\n        color: \"white\",\n        weight: 1,\n        opacity: 1,\n        fillOpacity: 0.8\n    };\n\n    // create geojson layer\n    var layer = L.geoJSON(geojsonData.responseJSON, {\n        pointToLayer: function (feature, latlng) {\n            return L.circleMarker(latlng, geojsonMarkerGreen);\n        }\n    })\n\n    // set style based on feature properties\n    layer.setStyle(function(feature) {\n        if (feature.properties.status == 'active') {\n            return {fillColor: 'orange', color:'black', radius: 9}\n        } else if (feature.properties.status == 'finished') {\n            return {fillColor: 'blue'}\n        } else  if (feature.properties.status == 'inactive') {\n            return {fillColor: 'grey'}\n        }\n    }).addTo(map)\n\n    // add a popup\n    layer.bindPopup(function (layer) {\n        // popup with a link to the project page with detailed information\n        popup = '<a href=\"project.html?projectId='+layer.feature.properties.project_id+'\">'+layer.feature.properties.name+'</a>'\n        return popup;\n    });\n\n    // fit to layer extent\n    map.fitBounds(layer.getBounds());\n\n    // add data to projects table\n    populateProjectsTable(geojsonData.responseJSON);\n\n    // add overview stats\n    var finishedProjects = geojsonData.responseJSON.features.filter(function(item) {\n        return item['properties']['status'] == 'finished' | item['properties']['status'] == 'archived'\n    })\n\n    var mappedArea = 0.0\n    for (var i = 0; i < finishedProjects.length; i++) {\n      var projectArea = parseFloat(finishedProjects[i]['properties']['area_sqkm'])\n      if (projectArea > 0) {\n        mappedArea += projectArea\n        }\n      }\n\n    document.getElementById('stats-finished-projects').innerHTML = finishedProjects.length\n    // convert to broken up numbers\n    document.getElementById('stats-mapped-area').innerHTML = (parseInt(mappedArea/1000)*1000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n  })\n\n}\n\nfunction populateProjectsTable(geojsonData) {\n  console.log('added projects')\n\n  var tableRef = document.getElementById('projectsTable').getElementsByTagName('tbody')[0];\n\n  geojsonData.features.forEach(function(element) {\n\n    var tr = tableRef.insertRow();\n\n    var td = document.createElement('td')\n    td.innerHTML = '<a href=\"project.html?projectId='+element.properties.project_id+'\">'+element.properties.name+'</a>'\n    tr.appendChild(td)\n\n    td = document.createElement('td')\n    td.innerHTML = element.properties.status\n    tr.appendChild(td)\n\n    td = document.createElement('td')\n    if (element.properties.progress > 0) {\n        td.innerHTML = Math.round(100*element.properties.progress)+'%'\n    } else {\n        td.innerHTML = 'not available'\n    }\n    tr.appendChild(td)\n\n    td = document.createElement('td')\n    if (parseInt(element.properties.number_of_users) > 0) {\n        td.innerHTML = element.properties.number_of_users\n    } else {\n        td.innerHTML = 'not available'\n    }\n\n    tr.appendChild(td)\n  });\n\n  $('#projectsTable').DataTable();\n  $('.dataTables_length').addClass('bs-select');\n\n}\n","var map;\n\nexports.initAnalyticsProject = function initAnalyticsProject() {\n  // load project id from query variable\n  var projectId = getQueryVariable('projectId').toString()\n  console.log(projectId)\n\n  // init basic map with all projects as polygon, zoom to selected project\n  initProjectMap();\n  var url = 'https://apps.mapswipe.org/api/projects/projects_geom.geojson';\n  addProject(url, projectId);\n\n  // make plot for selected project\n  url = 'https://apps.mapswipe.org/api/history/history_'+projectId+'.csv'\n  makePlot(url, projectId, 'cum_progress');\n\n  // add items and links to download table\n  populateProjectDataTable(projectId);\n\n}\n\n\nfunction getQueryVariable(variable) {\n   var query = window.location.search.substring(1);\n   console.log(query)\n   var vars = query.split(\"&\");\n   for (var i=0;i<vars.length;i++) {\n       var pair = vars[i].split(\"=\");\n       if(pair[0] == variable){return pair[1];}\n   }\n   return(false);\n}\n\n\nfunction initProjectMap() {\n  map = L.map('map').setView([0.0, 0.0], 2);\n  L.tileLayer( 'https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png', {\n    attribution: 'Map tiles by <a href=\"https://carto.com/\">Carto</a>, under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY 3.0.</a> Data by <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, under ODbL.',\n    subdomains: ['a','b','c']\n  }).addTo( map );\n  console.log('added map');\n\n  setTimeout(function(){ map.invalidateSize()}, 400);\n\n  var legend = L.control({position: 'bottomleft'});\n  legend.onAdd = function (map) {\n\tvar div = L.DomUtil.create('div', 'info legend')\n\tdiv.innerHTML += '<i style=\"background:orange\"></i>active<br>'\n\tdiv.innerHTML += '<i style=\"background:blue\"></i>finished<br>'\n\tdiv.innerHTML += '<i style=\"background:grey\"></i>inactive<br>'\n\treturn div;\n  };\n  legend.addTo(map);\n\n}\n\n\nfunction addProject (url, projectId) {\n  var geojsonData = $.ajax({\n    url:url,\n    dataType: \"json\",\n    success: console.log(\"mapswipe project centroids data successfully loaded.\"),\n    error: function (xhr) {\n      alert(xhr.statusText)\n    }\n  })\n  // Specify that this code should run once the county data request is complete\n  $.when(geojsonData).done(function() {\n\n    // define default point style\n    var geojsonPolygonStyle= {\n        fillColor: \"grey\",\n        color: \"white\",\n        weight: 1,\n        opacity: 1,\n        fillOpacity: 0.4\n    };\n\n    // create geojson layer\n    var layer = L.geoJSON(geojsonData.responseJSON, {\n        style: geojsonPolygonStyle\n    })\n\n    // set style based on feature properties\n    layer.setStyle(function(feature) {\n        if (feature.properties.status == 'active') {\n            var style = {fillColor: 'orange', color:'black'}\n        } else if (feature.properties.status == 'finished') {\n            style = {fillColor: 'blue'}\n        } else if (feature.properties.status == 'inactive') {\n            style = {fillColor: 'grey'}\n        }\n        if (feature.properties.project_id == projectId) {\n            style.color = 'black',\n            style.weight = 3\n        }\n        return style\n    }).addTo(map)\n\n    // add a popup\n    layer.bindPopup(function (layer) {\n        // popup with a link to the project page with detailed information\n        popup = '<a href=\"project.html?projectId='+layer.feature.properties.project_id+'\">'+layer.feature.properties.name+'</a>'\n        return popup;\n    });\n\n    // zoom to selected project\n    zoomToFeature(layer, projectId);\n\n\n    // get info for our project\n    var projectInfo = geojsonData.responseJSON.features.filter(function(item) {\n        return item['properties']['project_id'] == projectId\n    })[0]['properties']\n\n    // add other project info to html\n    document.getElementById('project-info-name').innerHTML = projectInfo['name']\n    document.getElementById('project-info-status').innerHTML = projectInfo['status']\n    document.getElementById('project-info-description').innerHTML = projectInfo['project_details']\n    document.getElementById('project-info-progress').innerHTML = parseInt(Math.round(100 * projectInfo['progress']))\n    document.getElementById('project-info-contributors').innerHTML = projectInfo['number_of_users']\n    document.getElementById('project-info-area').innerHTML = parseInt(projectInfo['area_sqkm']).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \");\n\n  })\n}\n\n\nfunction zoomToFeature(layer, projectId) {\n  layer.eachLayer(function(layer) {\n    if (layer.feature.properties.project_id == projectId) {\n        console.log('zoom to feature')\n        map.fitBounds(layer.getBounds());\n    }\n  })\n\n}\n\n\nfunction populateProjectDataTable(projectId) {\n\n  var datasets = [\n    {'name': 'Aggregated Results',\n     'url': 'https://apps.mapswipe.org/api/agg_results/agg_results_' + projectId + '.csv',\n     'description': 'aggregated results',\n     'datatype': 'CSV'\n     },\n     {'name': 'Aggregated Results (with Geometry)',\n     'url': 'https://apps.mapswipe.org/api/agg_results/agg_results_' + projectId + '_geom.geojson',\n     'description': 'aggregated results',\n     'datatype': 'GeoJSON'\n     },\n     {'name': 'HOT Tasking Manager Geometries',\n     'url': 'https://apps.mapswipe.org/api/hot_tm/hot_tm_' + projectId + '.geojson',\n     'description': 'This dataset contains shapes that are ready to use in the HOT Tasking Manager. Currently, the geometries consist of maximum 15 MapSwipe Tasks, where at least 35% of all users indicated the presence of a building by classifying as \"yes\" or \"maybe\"',\n     'datatype': 'GeoJSON'\n     },\n     {'name': 'Moderate to High Agreement Yes Maybe Geometries',\n     'url': 'https://apps.mapswipe.org/api/yes_maybe/yes_maybe_' + projectId + '.geojson',\n     'description': 'This dataset contains all results where at least 35% of users submitted a \"yes\" or \"maybe\" classification. The output dataset depicts the union of all selected results.',\n     'datatype': 'GeoJSON'\n     },\n     {'name': 'Groups',\n     'url': 'https://apps.mapswipe.org/api/groups/groups_' + projectId + '.csv',\n     'description': 'Groups',\n     'datatype': 'CSV'\n     },\n     {'name': 'History',\n     'url': 'https://apps.mapswipe.org/api/history/history_' + projectId + '.csv',\n     'description': 'History',\n     'datatype': 'CSV'\n     },\n     {'name': 'Results',\n     'url': 'https://apps.mapswipe.org/api/results/results_' + projectId + '.csv',\n     'description': 'Results',\n     'datatype': 'CSV'\n     },\n     {'name': 'Tasks',\n     'url': 'https://apps.mapswipe.org/api/tasks/tasks_' + projectId + '.csv',\n     'description': 'Tasks',\n     'datatype': 'CSV'\n     },\n  ]\n\n  var tableRef = document.getElementById('projectDataTable').getElementsByTagName('tbody')[0];\n  datasets.forEach(function(element) {\n    var tr = tableRef.insertRow();\n\n    var td = document.createElement('td')\n    td.innerHTML = projectId\n    tr.appendChild(td)\n\n    td = document.createElement('td')\n    td.innerHTML = element.name\n    tr.appendChild(td)\n\n    td = document.createElement('td')\n    td.innerHTML = element.datatype\n    tr.appendChild(td)\n\n    td = document.createElement('td')\n    td.innerHTML = element.description\n    tr.appendChild(td)\n\n    td = document.createElement('td')\n    td.innerHTML = '<a href=\"'+element.url+'\" target=\"_blank\">Download</a>'\n    tr.appendChild(td)\n  })\n}\n\n\nfunction makePlot(url, projectId, attribute) {\n  Plotly.d3.csv(url, function(data){ processData(data, projectId, attribute) } );\n};\n\n\nfunction processData(allRows, projectId, attribute) {\n  var x = [], y = [];\n  for (var i=0; i<allRows.length; i++) {\n    var row = allRows[i];\n    x.push( row['day'] );\n    y.push( 100 * row[attribute] );\n  }\n  makePlotly( x, y, projectId, attribute);\n}\n\n\nfunction makePlotly( x, y, projectId, attribute){\n  var plotDiv = document.getElementById(\"plot\");\n  var traces = [{\n    x: x,\n    y: y\n  }];\n\n\n  if (attribute == 'cum_progress') {\n    var layout = {\n      autosize: 350,\n      height: 350,\n      margin: {\n        l: 40,\n        r: 40,\n        b: 40,\n        t: 60,\n        pad: 4\n      },\n      yaxis: {range: [0, 101]},\n      title: {\n        text: 'Progress [%]'\n      }\n    }\n  } else {\n    var layout = {}\n  }\n\n  Plotly.newPlot(attribute, traces, layout,\n    {displayModeBar: false})\n};\n\n\n","'use strict';\n\nimport Navigation from './components/navigation.js';\nimport {initMap} from './components/overviewStats.js';\nimport {initAnalyticsProject} from './components/projectStats.js';\n\nlet html = document.querySelector('html');\nlet isMobile = false;\nlet resizeId;  \n// let menu = new Navigation(document.querySelector('.navigation'));\n\nif (html.classList.contains('mobile')) {        \n    isMobile = true;\n}\n\nif (html.querySelector('#year')) {\n    var theDate = new Date();\n    html.querySelector('#year').innerHTML =theDate.getFullYear();\n}\n\nif (html.querySelector('.burger-menu')) {\n    new Navigation(html.querySelector('.burger-menu'));\n}\n\n// Basic classes to add relevant classes to html tag\nfunction classRemove(element, classes) {\n    classes.forEach(function (clas) {\n        element.classList.remove(clas);\n    });\n}\n\nfunction viewport() {\n    var width = document.body.clientWidth,\n        viewport = 'default';\n\n    if (width >= 1344) {\n        viewport = 'desktop-wide';\n\n    }\n    if (width < 1344) {\n        viewport = 'desktop-compact';\n\n    }\n    if (width < 1024) {\n        viewport = 'tablet-portrait';\n\n    }\n    if (width < 768) {\n        viewport = 'mobile-landscape';\n\n    }\n    if (width < 481) {\n        viewport = 'mobile-portrait';\n\n    }\n\n    classRemove(html, ['default', 'desktop-compact', 'tablet-portrait', 'mobile-landscape', 'mobile-portrait']);\n    html.classList.add(viewport);\n\n    return viewport;\n}\n\nfunction touchEnabled() {\n    if ('ontouchstart' in window || 'onmsgesturechange' in window) {\n        html.classList.add('touchenabled');\n        return true;\n    }\n    html.classList.remove('touchenabled');\n    return false;\n}\n\nfunction device() {\n    var device = 'desktop';\n    switch (viewport()) {\n        case 'desktop-compact':\n            device = 'desktop';\n            if (touchEnabled()) {\n                device = 'tablet';\n            }\n            break;\n        case 'tablet-portrait':\n            device = 'tablet';\n            break;\n        case 'mobile-landscape':\n        case 'mobile-portrait':\n            device = 'mobile';\n            break;\n    }\n    classRemove(html, ['mobile', 'tablet', 'tablet-portrait', 'desktop']);\n    html.classList.add(device);\n\n    return device;\n}\n\nfunction doneResizing(){\n    device();\n    viewport();\n\n    let wasMobile = isMobile;\n\n    html.classList.contains('mobile') ? isMobile = true : isMobile = false;\n\n    if (wasMobile != isMobile) {\n        // isMobile ? menu.closeDesktopSearch() : menu.closeMobileMenu();\n    }\n}\n\n// Basic functions to add relevant classes to html tag\nviewport();\ndevice();\ntouchEnabled();     \n\nwindow.addEventListener('resize', function(){\n    clearTimeout(resizeId);\n    resizeId = setTimeout(doneResizing, 500);\n});\n\nwindow.initMap = initMap;\nwindow.initAnalyticsProject = initAnalyticsProject;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}